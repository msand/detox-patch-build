apply plugin: 'com.android.application'

apply from: "../../node_modules/react-native/react.gradle"

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.wix.detox.test"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        testBuildType System.getProperty('testBuildType', 'debug')
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        missingDimensionStrategy "minReactNative", "minReactNative46"
        /*
        testInstrumentationRunnerArguments = [
                'detoxServer': 'ws://localhost:8099',
                'detoxSessionId': 'test'
        ]
        */
    }

    productFlavors {
        flavorDimensions "compileRNFromSource"
        fromSource {
            dimension "compileRNFromSource"
        }
        fromBin {
            dimension "compileRNFromSource"
        }
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword "12345678"
            keyAlias "key0"
            keyPassword "12345678"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:27.1.1"

    fromSourceImplementation(project(path: ":ReactAndroid"))
    // noinspection GradleDynamicVersion
    fromBinImplementation "com.facebook.react:react-native:+"

    androidTestImplementation(project(path: ":detox"))
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
  from configurations.compile
  into 'libs'
}
